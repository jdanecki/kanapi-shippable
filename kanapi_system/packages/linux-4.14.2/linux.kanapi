#!/bin/bash
#
# Copyright (c) 2012-2016 Jacek Danecki <jacek.m.danecki@gmail.com>
#
# This file is part of KaNaPi project
#
# KaNaPi is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# KaNaPi is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with KaNaPi.  If not, see <http://www.gnu.org/licenses/>.

PACKAGE_NAME=linux
VER=4.14.2
URL="https://cdn.kernel.org/pub/linux/kernel/v4.x"
EXT=tar.xz
#build depends on

. ../settings

pkg_prepare() {
	pkg_tar_xz
}

configure_menu() {
	export PATH=${KANAPI_HOST_BASE}/../cross/`uname -m`/gcc-${gcc_ver}/bin:${PATH}
    export NCURSES_HDR="-I${KANAPI_HOST_BASE}/ncurses-${ncurses_ver}/include"
    export NCURSES_LIB="-L${KANAPI_HOST_BASE}/ncurses-${ncurses_ver}/lib"
	${MAKE} ARCH=${KANAPI_KERNEL_TARGET} V=1 -C ${PACKAGE_SRCDIR} O=`pwd` HOSTCC=`uname -m`-kanapi-linux-gnu-gcc \
    HOST_EXTRACFLAGS='${NCURSES_HDR}/ncurses ${NCURSES_HDR} -DCURSES_LOC="<ncurses.h>"' \
    HOST_LOADLIBES='${NCURSES_LIB} -lncurses -ldl -lrt -lm -lpthread' menuconfig
}

pkg_configure() {
	grep Atom /proc/cpuinfo > /dev/null 
   	if [ "$?" = "0" ]
	then
		echo "Atom platform"
		cp -v ../../packages/${PACKAGE_VER}/config-${KANAPI_KERNEL_TARGET}-atom .config
	else
		cp -v ../../packages/${PACKAGE_VER}/config-${KANAPI_KERNEL_TARGET} .config
	fi
	configure_menu
#	${MAKE} ARCH=${KANAPI_KERNEL_TARGET} V=1 -C ${PACKAGE_SRCDIR} O=`pwd` olddefconfig
#	${MAKE} ARCH=${KANAPI_KERNEL_TARGET} V=1 -C ${PACKAGE_SRCDIR} O=`pwd` versatile_defconfig
}

pkg_build() {
	export PATH=${KANAPI_CROSS_BASE}/binutils-${binutils_ver}/bin:${KANAPI_CROSS_BASE}/gcc-${gcc_ver}/bin:${PATH}
#	${MAKE} CROSS_COMPILE=${KANAPI_TARGET_NAME}- ARCH=${KANAPI_KERNEL_TARGET} -C ${PACKAGE_SRCDIR} O=`pwd` -j ${MAKE_JOBS}  headers
	${MAKE} CROSS_COMPILE=${KANAPI_TARGET_NAME}- ARCH=${KANAPI_KERNEL_TARGET} -C ${PACKAGE_SRCDIR} O=`pwd` -j ${MAKE_JOBS}  all
#	${MAKE} CROSS_COMPILE=${KANAPI_TARGET_NAME}- ARCH=${KANAPI_KERNEL_TARGET} -C ${PACKAGE_SRCDIR} O=`pwd` -j ${MAKE_JOBS}  versatile-pb.dtb
#	${MAKE} CROSS_COMPILE=${KANAPI_TARGET_NAME}- ARCH=${KANAPI_KERNEL_TARGET} -C ${PACKAGE_SRCDIR} O=`pwd` -j ${MAKE_JOBS}  bzImage
#	${MAKE} CROSS_COMPILE=${KANAPI_TARGET_NAME}- ARCH=${KANAPI_KERNEL_TARGET} -C ${PACKAGE_SRCDIR} O=`pwd` -j ${MAKE_JOBS}  modules
}

pkg_install() {
	export PATH=${KANAPI_CROSS_BASE}/binutils-${binutils_ver}/bin:${KANAPI_CROSS_BASE}/gcc-${gcc_ver}/bin:${PATH}
	${MAKE} CROSS_COMPILE=${KANAPI_TARGET_NAME}- ARCH=${KANAPI_KERNEL_TARGET} -C ${PACKAGE_SRCDIR} O=`pwd` -j ${MAKE_JOBS}  INSTALL_MOD_PATH=${PREFIX} modules_install
#	${MAKE} CROSS_COMPILE=${KANAPI_TARGET_NAME}- ARCH=${KANAPI_KERNEL_TARGET} -C ${PACKAGE_SRCDIR} O=`pwd` -j ${MAKE_JOBS}  INSTALL_FW_PATH=${PREFIX}/firmware firmware_install
	${MAKE} CROSS_COMPILE=${KANAPI_TARGET_NAME}- ARCH=${KANAPI_KERNEL_TARGET} -C ${PACKAGE_SRCDIR} O=`pwd` -j ${MAKE_JOBS}  INSTALL_HDR_PATH=${PREFIX} headers_install
	if [ "${KANAPI_TARGET}" = "arm" ]
	then
		cp arch/arm/boot/zImage ${PREFIX}
		cp arch/arm/boot/dts/versatile-pb.dtb ${PREFIX}
	else
		cp arch/${KANAPI_KERNEL_TARGET}/boot/bzImage ${PREFIX}
	fi
}	

pkg_check() {
	export PATH=${KANAPI_HOST_BASE}/../cross/`uname -m`/gcc-${gcc_ver}/bin:${PATH}
	echo "PATH=${PATH}"
	`uname -m`-kanapi-linux-gnu-gcc --version
	ls -l `which depmod`
	ls -l `which sort`
	ls -l `which grep`
}
